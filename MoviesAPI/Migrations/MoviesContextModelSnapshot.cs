// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesAPI.Contexts;

namespace MoviesAPI.Migrations
{
    [DbContext(typeof(MoviesContext))]
    partial class MoviesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoviesAPI.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Thriller"
                        });
                });

            modelBuilder.Entity("MoviesAPI.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RunningTime")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RunningTime = 130,
                            Title = "Die Hard",
                            Year = 2000
                        },
                        new
                        {
                            Id = 2,
                            RunningTime = 120,
                            Title = "Avengers Endgame",
                            Year = 2018
                        },
                        new
                        {
                            Id = 3,
                            RunningTime = 180,
                            Title = "Terminator",
                            Year = 1998
                        },
                        new
                        {
                            Id = 4,
                            RunningTime = 200,
                            Title = "Titanic",
                            Year = 1998
                        },
                        new
                        {
                            Id = 5,
                            RunningTime = 150,
                            Title = "Hangover",
                            Year = 1994
                        },
                        new
                        {
                            Id = 6,
                            RunningTime = 180,
                            Title = "Matrix",
                            Year = 2005
                        },
                        new
                        {
                            Id = 7,
                            RunningTime = 170,
                            Title = "Avatar",
                            Year = 2010
                        });
                });

            modelBuilder.Entity("MoviesAPI.Entities.MovieGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 100)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("GenredId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenredId = 4,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenredId = 5,
                            MovieId = 1
                        },
                        new
                        {
                            Id = 3,
                            GenredId = 3,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 4,
                            GenredId = 4,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 5,
                            GenredId = 5,
                            MovieId = 2
                        },
                        new
                        {
                            Id = 6,
                            GenredId = 4,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 7,
                            GenredId = 5,
                            MovieId = 3
                        },
                        new
                        {
                            Id = 8,
                            GenredId = 2,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 9,
                            GenredId = 3,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 10,
                            GenredId = 4,
                            MovieId = 4
                        },
                        new
                        {
                            Id = 11,
                            GenredId = 1,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 12,
                            GenredId = 3,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 13,
                            GenredId = 4,
                            MovieId = 5
                        },
                        new
                        {
                            Id = 14,
                            GenredId = 4,
                            MovieId = 6
                        },
                        new
                        {
                            Id = 15,
                            GenredId = 5,
                            MovieId = 7
                        });
                });

            modelBuilder.Entity("MoviesAPI.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            UserId = 1,
                            Value = 4
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            UserId = 1,
                            Value = 5
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 3,
                            UserId = 1,
                            Value = 3
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 2,
                            UserId = 2,
                            Value = 2
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 3,
                            UserId = 2,
                            Value = 4
                        },
                        new
                        {
                            Id = 6,
                            MovieId = 4,
                            UserId = 2,
                            Value = 3
                        },
                        new
                        {
                            Id = 8,
                            MovieId = 5,
                            UserId = 2,
                            Value = 3
                        },
                        new
                        {
                            Id = 9,
                            MovieId = 6,
                            UserId = 2,
                            Value = 1
                        },
                        new
                        {
                            Id = 10,
                            MovieId = 3,
                            UserId = 3,
                            Value = 3
                        },
                        new
                        {
                            Id = 11,
                            MovieId = 4,
                            UserId = 3,
                            Value = 4
                        },
                        new
                        {
                            Id = 12,
                            MovieId = 5,
                            UserId = 3,
                            Value = 5
                        },
                        new
                        {
                            Id = 13,
                            MovieId = 4,
                            UserId = 4,
                            Value = 5
                        },
                        new
                        {
                            Id = 14,
                            MovieId = 5,
                            UserId = 4,
                            Value = 3
                        },
                        new
                        {
                            Id = 15,
                            MovieId = 6,
                            UserId = 4,
                            Value = 1
                        },
                        new
                        {
                            Id = 16,
                            MovieId = 1,
                            UserId = 5,
                            Value = 5
                        },
                        new
                        {
                            Id = 17,
                            MovieId = 2,
                            UserId = 5,
                            Value = 3
                        },
                        new
                        {
                            Id = 18,
                            MovieId = 3,
                            UserId = 5,
                            Value = 5
                        },
                        new
                        {
                            Id = 19,
                            MovieId = 5,
                            UserId = 5,
                            Value = 5
                        },
                        new
                        {
                            Id = 20,
                            MovieId = 6,
                            UserId = 5,
                            Value = 4
                        },
                        new
                        {
                            Id = 21,
                            MovieId = 7,
                            UserId = 5,
                            Value = 5
                        });
                });

            modelBuilder.Entity("MoviesAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 10)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ron",
                            LastName = "Swanson"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Michael",
                            LastName = "Scott"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Ross",
                            LastName = "Geller"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Jack",
                            LastName = "Ryan"
                        });
                });

            modelBuilder.Entity("MoviesAPI.Entities.MovieGenre", b =>
                {
                    b.HasOne("MoviesAPI.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.HasOne("MoviesAPI.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesAPI.Entities.Rating", b =>
                {
                    b.HasOne("MoviesAPI.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesAPI.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
